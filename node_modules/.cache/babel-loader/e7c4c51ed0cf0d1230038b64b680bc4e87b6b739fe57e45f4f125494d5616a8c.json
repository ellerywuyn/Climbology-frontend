{"ast":null,"code":"var _jsxFileName = \"/Users/yuningwu/Documents/Climbology-frontend/src/components/Create.js\",\n  _s = $RefreshSig$();\nimport './Create.css'; // Make sure the CSS file is named correctly and imported\nimport kilter_board from '../assets/kilter_board.png';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Create() {\n  _s();\n  const [selectedHolds, setSelectedHolds] = useState([]);\n  // ... previous code ...\n\n  const renderCircles = () => {\n    return selectedHolds.map(hold => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      style: {\n        top: hold.y,\n        left: hold.x\n      }\n    }, hold.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this));\n  };\n  const handleClick = async e => {\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const response = await axios.post('/api/identify-hold', {\n      x,\n      y\n    });\n    if (response.data.success) {\n      setSelectedHolds([...selectedHolds, response.data.holdId]);\n    }\n  };\n\n  // return (\n  //     <img src={kilter_board} alt=\"kilter board\" className=\"kilter-board\" onClick={handleClick} />\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kilterBoardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: kilter_board,\n      alt: \"kilter board\",\n      className: \"kilter-board\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), renderCircles()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"oLk8k8ed9CZ13nwocXJIyGlAWWk=\");\n_c = Create;\nexport default Create;\n\n//   return (\n//     <main className=\"create-route\">\n//       <h1>Climbology</h1>\n//       <div className=\"content-area\">\n//           <img src={kilter_board} alt=\"kilter board\" className=\"kilter-board\" />\n//       </div>\n//     </main>\n//   );\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["kilter_board","React","useState","axios","jsxDEV","_jsxDEV","Create","_s","selectedHolds","setSelectedHolds","renderCircles","map","hold","className","style","top","y","left","x","id","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","e","rect","target","getBoundingClientRect","clientX","clientY","response","post","data","success","holdId","children","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/yuningwu/Documents/Climbology-frontend/src/components/Create.js"],"sourcesContent":["import './Create.css'; // Make sure the CSS file is named correctly and imported\nimport kilter_board from '../assets/kilter_board.png';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Create() {\n    const [selectedHolds, setSelectedHolds] = useState([]);\n    // ... previous code ...\n\n    const renderCircles = () => {\n        return selectedHolds.map(hold => (\n        <div \n            key={hold.id} \n            className=\"circle\" \n            style={{ top: hold.y, left: hold.x }} \n        />\n        ));\n    };\n\n    const handleClick = async (e) => {\n        const rect = e.target.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n    \n        const response = await axios.post('/api/identify-hold', { x, y });\n        if (response.data.success) {\n        setSelectedHolds([...selectedHolds, response.data.holdId]);\n        }\n    };\n    \n    // return (\n    //     <img src={kilter_board} alt=\"kilter board\" className=\"kilter-board\" onClick={handleClick} />\n    // );\n      \n    return (\n    <div className=\"kilterBoardContainer\">\n        <img src={kilter_board} alt=\"kilter board\" className=\"kilter-board\" onClick={handleClick} />\n        {renderCircles()}\n    </div>\n    );\n}\n\n\nexport default Create;\n\n\n//   return (\n//     <main className=\"create-route\">\n//       <h1>Climbology</h1>\n//       <div className=\"content-area\">\n//           <img src={kilter_board} alt=\"kilter board\" className=\"kilter-board\" />\n//       </div>\n//     </main>\n//   );\n"],"mappings":";;AAAA,OAAO,cAAc,CAAC,CAAC;AACvB,OAAOA,YAAY,MAAM,4BAA4B;AACrD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD;;EAEA,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IACxB,OAAOF,aAAa,CAACG,GAAG,CAACC,IAAI,iBAC7BP,OAAA;MAEIQ,SAAS,EAAC,QAAQ;MAClBC,KAAK,EAAE;QAAEC,GAAG,EAAEH,IAAI,CAACI,CAAC;QAAEC,IAAI,EAAEL,IAAI,CAACM;MAAE;IAAE,GAFhCN,IAAI,CAACO,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACA,CAAC;EACN,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,qBAAqB,CAAC,CAAC;IAC7C,MAAMV,CAAC,GAAGO,CAAC,CAACI,OAAO,GAAGH,IAAI,CAACT,IAAI;IAC/B,MAAMD,CAAC,GAAGS,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACX,GAAG;IAE9B,MAAMgB,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,oBAAoB,EAAE;MAAEd,CAAC;MAAEF;IAAE,CAAC,CAAC;IACjE,IAAIe,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MAC3BzB,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEuB,QAAQ,CAACE,IAAI,CAACE,MAAM,CAAC,CAAC;IAC1D;EACJ,CAAC;;EAED;EACA;EACA;;EAEA,oBACA9B,OAAA;IAAKQ,SAAS,EAAC,sBAAsB;IAAAuB,QAAA,gBACjC/B,OAAA;MAAKgC,GAAG,EAAErC,YAAa;MAACsC,GAAG,EAAC,cAAc;MAACzB,SAAS,EAAC,cAAc;MAAC0B,OAAO,EAAEf;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3Fb,aAAa,CAAC,CAAC;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAAChB,EAAA,CAnCQD,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAsCf,eAAeA,MAAM;;AAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}